{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "adVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A2",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the AD VMs Created"
      },
      "defaultValue": "Standard_A2"
    },
    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the SQL VMs Created"
      },
      "defaultValue": "Standard_DS4"
    },
    "witnessVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A2",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the Witness VM Created"
      },
      "defaultValue": "Standard_A2",
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "contoso.local"
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service Account name"
      },
      "defaultValue": "sqlservice"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service Account password"
      }
    },
    "sqlStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of Sql Server Storage Account"
      }
    },
    "sqlStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Sql Server Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
    "dcStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of  DC Storage Account"
      }
    },
    "dcStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the DC Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "SPStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of  Sharepoint Storage Account"
      }
    },
    "SPStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the SharePoint Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Change this value to your repo name if deploying from a fork"
      },
      "defaultValue": "https://raw.githubusercontent.com/moditpro/sharepoint-server-farm-ha-v2/master"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Auto-generated token to access _artifactsLocation",
        "artifactsLocationSasToken": ""
      },
      "defaultValue": ""
    },
    "staticSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet static IPs are allocated from in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "sqlSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.0.1.0/26"
    },
    "adPDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD VM"
      },
      "defaultValue": "10.0.0.4"
    },
    "adBDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new backup AD VM"
      },
      "defaultValue": "10.0.0.5"
    },
    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new SQL Server Internal Load Balancer"
      },
      "defaultValue": "10.0.1.9"
    },
    "deploymentPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS Prefix for the Public IP Address for the Always On Cluster"
      },
      "defaultValue": "aodns"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of virtual network to be created"
      },
      "defaultValue": "autohav2VNET"
    },
    "templatesBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "Linked Templates base url"
      },
      "defaultValue": "https://raw.githubusercontent.com/moditpro/sharepoint-server-farm-ha-v2/master/nested"
    },
    "scriptsBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "DSC Scripts base url"
      },
      "defaultValue": "https://raw.githubusercontent.com/moditpro/sharepoint-server-farm-ha-v2/master/scripts"
    },
    "autoPatchingDay": {
      "type": "string",
      "allowedValues": [
        "Never",
        "Everyday",
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "metadata": {
        "description": "The day of a week for auto patching"
      },
      "defaultValue": "Sunday"
    },
    "autoPatchingStartHour": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "20",
        "21",
        "22",
        "23"
      ],
      "metadata": {
        "description": "The start hour of a day for auto patching"
      },
      "defaultValue": "2"
    },
    "sqlAOAGName": {
      "type": "string",
      "metadata": {
        "description": "The Sql AlwaysOn Group Name"
      },
      "defaultValue": "alwayson-ag"
    },
    "sqlAOListenerPort": {
      "type": "string",
      "metadata": {
        "description": "The Sql AG Listener port"
      },
      "defaultValue": "1433"
    },
    "sqlAOListenerName": {
      "type": "string",
      "metadata": {
        "description": "The Sql AG Listener Name"
      },
      "defaultValue": "alwayson-ag-listener"
    },
    "sqlServerVersion": {
      "type": "string",
      "allowedValues": [
        "SQL2012SP3-WS2012R2",
        "SQL2014SP1-WS2012R2",
        "SQL2016-WS2012R2"
      ],
      "metadata": {
        "description": "The Sql Server Version"
      },
      "defaultValue": "SQL2014SP1-WS2012R2"
    },
    "numberOfSqlVMDisks": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3",
        "4"
      ],
      "metadata": {
        "description": "The Sql VM Disk Size"
      },
      "defaultValue": "2"
    },
    "workloadType": {
      "type": "string",
      "allowedValues": [
        "GENERAL",
        "OLTP",
        "DW"
      ],
      "metadata": {
        "description": "The Sql VM work load type: GENERAL - general work load; DW - datawear house work load; OLTP - Transactional processing work load"
      },
      "defaultValue": "GENERAL"
    },
    "sharepointFarmName": {
      "type": "string",
      "metadata": {
        "group": "basics",
        "description": "The name of the SharePoint farm"
      },
      "defaultValue": "spfarm"
    },
    "spWebSubnet": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The address range of the SP Web subnet created in the new VNET"
      },
      "defaultValue": "10.0.2.0/24"
    },
    "spAppSubnet": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The address range of the SP App subnet created in the new VNET"
      },
      "defaultValue": "10.0.3.0/24"
    },
    "spWebIPRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "Resource Group containing existing SP Web IP address"
      }
    },
    "spWebIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "Indicates whether the Sharepoint farm's IP is new or existing"
      }
    },
    "spWebIPAddressName": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The new or existing - depending on value of spWebIPNewOrExisting parameter - IP address name for SP Web "
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The DNS Prefix for the Public IP Address for the Sharepoint Web Application"
      }
    },
    "spVMSize": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The size of the SP VMs Created"
      },
      "defaultValue": "Standard_DS2"
    },
    "sharePointSetupUserAccountUserName": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Setup account name"
      },
      "defaultValue": "sp_setup"
    },
    "sharePointSetupUserAccountPassword": {
      "type": "securestring",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Setup account password"
      }
    },
    "sharePointFarmAccountUserName": {
      "type": "string",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Farm account name"
      },
      "defaultValue": "sp_farm"
    },
    "sharePointFarmAccountPassword": {
      "type": "securestring",
      "metadata": {
        "group": "SharePoint Server settings",
        "description": "The Sharepoint Farm account password"
      }
    },
      "SPServicePoolManagedAccountUserName": {
        "type": "string",
        "metadata": {
          "group": "SharePoint Server settings",
          "description": "The Sharepoint Service Pool account name"
        },
        "defaultValue": "sp_service"
      },
      "SPServicePoolManagedAccountPassword": {
        "type": "securestring",
        "metadata": {
          "group": "SharePoint Server settings",
          "description": "The Sharepoint Farm account password"
        }
      },
      "SPWebPoolManagedAccountUserName": {
        "type": "string",
        "metadata": {
          "group": "SharePoint Server settings",
          "description": "The Sharepoint Web Pool account name"
        },
        "defaultValue": "sp_webpool"
      },

      "SPWebPoolManagedAccountPassword": {
        "type": "securestring",
        "metadata": {
          "group": "SharePoint Server settings",
          "description": "The Sharepoint WEb Pool account password"
        }
      },
      "sharePointFarmPassphrasePassword": {
        "type": "securestring",
        "metadata": {
          "group": "SharePoint Server settings",
          "description": "The Sharepoint Farm Passphrase"
        }
      },
      "spSiteTemplateName": {
        "type": "string",
        "metadata": {
          "group": "SharePoint Server settings",
          "description": "The Sharepoint Content Site Template Name"
        },
        "defaultValue": "STS#0"
      },
      "location": {
        "type": "string",
        "metadata": {
          "group": "Infrastructure settings",
          "description": "The region to deploy the resources into. Only change if resources need to be deployed to a different location than the resource group."
        },
        "defaultValue": "[resourceGroup().location]"
      }
    },
  "variables": {
    "lbSettings": {
      "rdpLBFE": "rdpLBFE",
      "sqlLBFE": "sqlLBFE",
      "adLBBE": "adLBBE",
      "sqlLBBE": "sqlLBBE",
      "rdpLBName": "rdpLoadBalancer",
      "sqlLBName": "sqlLoadBalancer",
      "spWebLBFE": "spWebLBFE",
      "spCALBFE": "spCALBFE",
      "spWebLBBE": "spWebLBBE",
      "spCALBBE": "spCALBBE",
      "spWebLB": "spWeb",
      "spCALB": "spCALB",
      "spWebLBName": "spWebLoadBalancer",
      "spCALBName": "spCALoadBalancer"
    },
    "subnetNames": {
      "staticSubnetName": "staticSubnet",
      "sqlSubnetName": "sqlSubnet",
      "spWebSubnetName": "spWebSubnet",
      "spAppSubnetName": "spAppSubnet"
    },
    "RDPNAT": "RDP",
    "spCANAT": "spCANAT",
    "spWebProbe": "spWebProbe",
    "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
    "primaryDCIPAddressName": "primaryDCIP",
    "backupDCIPAddressName": "backupDCIP",
    "sql1AddressName": "sql1IP",
    "sql0AddressName": "sql0IP",
    "vmSettings": {
      "availabilitySets": {
        "sqlAvailabilitySetName": "sqlAvailabilitySet",
        "adAvailabilitySetName": "adAvailabilitySet",
        "spWebAvailabilitySetName": "spWebAvailabilitySet",
        "spAppAvailabilitySetName": "spAppAvailabilitySet"
      },
      "noOfSqlVMs": 2,
      "noOfspRoleVMs": 2,
      "vmContainerName": "vhds",
      "adPDCVMName": "ad-pdc",
      "adBDCVMName": "ad-bdc",
      "sqlVMName": "sql-",
      "sqlwVMName": "sql-w",
      "spwebVMName": "sps-web-",
      "spappVMName": "sps-app-",
      "windowsImagePublisher": "MicrosoftWindowsServer",
      "windowsImageOffer": "WindowsServer",
      "windowsImageSKU": "2012-R2-Datacenter",
      "sqlImagePublisher": "MicrosoftSQLServer",
      "sqlImageOffer": "[parameters('sqlServerVersion')]",
      "spImagePublisher": "MicrosoftSharePoint",
      "spImageOffer": "MicrosoftSharePointServer",
      "spImageSKU": "2016",
      "spCentralAdminPort": 80,
      "rdpPort": 3389,
      "windowsDiskSize": 128,
      "sqlDiskSize": 1000,
      "spDiskSize": 128
    },
    "prefix": "[tolower(trim(subString(concat(parameters('dnsPrefix'),'           '),0,10)))]",
    "sqlAOEPName": "[concat(parameters('deploymentPrefix'),'-hadr')]",
    "sharePath": "[concat(parameters('deploymentPrefix'),'-fsw')]",
    "clusterName": "[concat(parameters('deploymentPrefix'),'-fc')]",
    "adPDCNicName": "[concat(variables('vmSettings').adPDCVMName,'-nic')]",
    "adBDCNicName": "[concat(variables('vmSettings').adBDCVMName,'-nic')]",
    "sqlwNicName": "[concat(variables('vmSettings').sqlwVMName,'-nic')]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkNameWithSuffix'))]",
    "spCADNSPrefix": "[concat(parameters('dnsPrefix'),'admin')]",
    "spCAIPAddressName": "[concat(parameters('spWebIPAddressName'),'admin')]",
    "configDatabaseName": "SP_Config",
    "administrationContentDatabaseName": "SP_AdminContent",
    "contentDatabaseName": "spfarm_Content",
    "staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').sqlSubnetName)]",
    "spWebSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spWebSubnetName)]",
    "spAppSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spAppSubnetName)]",
    "spWebResourceIdexisting": "[resourceId(parameters('spWebIPRGName'),concat('Microsoft.Network','/','publicIPAddresses'),parameters('spWebIPAddressName'))]",
    "spWebResourceIdnew": "[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),parameters('spWebIPAddressName'))]",
    "sharepointCAfqdn": "[concat(variables('spCADNSPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    "sharepointWebfqdn": "[concat(parameters('dnsPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    "ids": {
      "adNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adPDCNicName'))]",
      "rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
      "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').sqlLBName)]",
      "spWeblbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spWebLBName)]",
      "spCAlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spCALBName)]",
      "spCAResourceId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('spCAIPAddressName'))]",
      "spWebAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.spWebAvailabilitySetName)]",
      "spAppAvailabilitySetName": "[resourceId('Microsoft.Compute/availabilitySets',variables('vmSettings').availabilitySets.spAppAvailabilitySetName)]"
    },
    "derivedIds": {
      "adIPConfigID": "[concat(variables('ids').adNicId,'/ipConfigurations/ipconfig1')]",
      "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
      "adRDPNATRuleID": "[concat(variables('ids').rdplbID,'/inboundNatRules/',variables('RDPNAT'))]",
      "adBEAddressPoolID": "[concat(variables('ids').rdplbID,'/backendAddressPools/',variables('lbSettings').adLBBE)]",
      "sqlBEAddressPoolID": "[concat(variables('ids').sqllbID,'/backendAddressPools/',variables('lbSettings').sqlLBBE)]",
      "sqllbFEConfigID": "[concat(variables('ids').sqllbID,'/frontendIPConfigurations/',variables('lbSettings').sqlLBFE)]",
      "sqllbProbeID": "[concat(variables('ids').sqllbID,'/probes/',variables('SQLAOProbe'))]",
      "spWebLBFEConfigID": "[concat(variables('ids').spWeblbID,'/frontendIPConfigurations/',variables('lbSettings').spWebLBFE)]",
      "spWebProbeID": "[concat(variables('ids').spWeblbID,'/probes/',variables('spWebProbe'))]",
      "spWebBEAddressPoolID": "[concat(variables('ids').spWeblbID,'/backendAddressPools/',variables('lbSettings').spWebLBBE)]",
      "spCABEAddressPoolID": "[concat(variables('ids').spCAlbID,'/backendAddressPools/',variables('lbSettings').spCALBBE)]",
      "spCAlbFEConfigID": "[concat(variables('ids').spCAlbID,'/frontendIPConfigurations/',variables('lbSettings').spCALBFE)]",
      "spCANATRuleID": "[concat(variables('ids').spCAlbID,'/inboundNatRules/',variables('spCANAT'))]"
    },
    "SQL2012SP2-WS2012R2": "Enterprise",
    "SQL2012SP3-WS2012R2": "Enterprise",
    "SQL2014-WS2012R2": "Enterprise",
    "SQL2014SP1-WS2012R2": "Enterprise",
    "SQL2016-WS2012R2": "Enterprise",
    "Monday": true,
    "Tuesday": true,
    "Wednesday": true,
    "Thursday": true,
    "Friday": true,
    "Saturday": true,
    "Sunday": true,
    "Never": false,
    "Everyday": true,
    "subnets": [
      {
        "name": "[variables('subnetNames').staticSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('staticSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').sqlSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('sqlSubnet')]"
        },
      },
      {
        "name": "[variables('subnetNames').spWebSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('spWebSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').spAppSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('spAppSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').spWebSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('spWebSubnet')]"
        }
      },
      {
        "name": "[variables('subnetNames').spAppSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('spAppSubnet')]"
        }
      }
    ],
    "virtualNetworkNameWithSuffix": "[substring(concat(parameters('virtualNetworkName'), uniqueString(parameters('sqlStorageAccountName'),parameters('dcStorageAccountName'))),0,15)]",
    "primaryDCIPAddressNameWithSuffix": "[substring(concat(variables('primaryDCIPAddressName'), uniqueString(parameters('sqlStorageAccountName'),parameters('dcStorageAccountName'))),0,15)]",
    "backupDCIPAddressNameWithSuffix": "[substring(concat(variables('backupDCIPAddressName'), uniqueString(parameters('sqlStorageAccountName'),parameters('dcStorageAccountName'))),0,15)]",
    "sql1AddressNameWithSuffix": "[substring(concat(variables('sql1AddressName'), uniqueString(parameters('sqlStorageAccountName'),parameters('dcStorageAccountName'))),0,15)]",
    "sql0AddressNameWithSuffix": "[substring(concat(variables('sql0AddressName'), uniqueString(parameters('sqlStorageAccountName'),parameters('dcStorageAccountName'))),0,15)]",
    "configuration": {
      "vnetwithDNSTemplateURL": "[concat(parameters('templatesBaseUrl'),'/vnet-with-dns-server.json')]",
      "nicTemplateURL": "[concat(parameters('templatesBaseUrl'),'/nic.json')]",
      "rdpIPAdressSetupURL": "[concat(parameters('templatesBaseUrl'),'/publicip-rdp.json')]",
      "vnetSetupURL": "[concat(parameters('templatesBaseUrl'),'/vnet-new.json')]",
      "setupLBsUrl": "[concat(parameters('templatesBaseUrl'),'/setupLBs.json')]",
      "creatingNicsUrl": "[concat(parameters('templatesBaseUrl'),'/creatingNICS.json')]",
      "storageAccountVirtualNetworkPublicIP": "[concat(parameters('templatesBaseUrl'),'/storageAccountVirtualNetworkPublicIP.json')]",
      "provisioningVMs": "[concat(parameters('templatesBaseUrl'),'/provisioningVM',parameters('numberOfSqlVMDisks'),'.json')]",
      "configuringBackupADVM": "[concat(parameters('templatesBaseUrl'),'/configuringBackupADVM.json')]",
      "preparingAlwaysOnSqlServer": "[concat(parameters('templatesBaseUrl'),'/preparingSqlServer.json')]",
      "configuringAlwaysOn": "[concat(parameters('templatesBaseUrl'),'/configuringAlwaysOn.json')]",
      "adPDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADPDC.ps1.zip')]",
      "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
      "adBDCModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateADBDC.ps1.zip')]",
      "adBDCConfigurationFunction": "CreateADBDC.ps1\\CreateADBDC",
      "fswModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFileShareWitness.ps1.zip')]",
      "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
      "sqlAOPrepareModulesURL": "[concat(parameters('scriptsBaseUrl'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
      "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
      "createClusterModulesURL": "[concat(parameters('scriptsBaseUrl'),'/CreateFailoverCluster.ps1.zip')]",
      "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster"
    }
  },
  "resources": [
    {
      "name": "StorageAccountVirtualNetworkPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "This resource will create storage accounts for Active Directory, SQL Server, File Share Witness and Diagnostics. It will also create the Virtual Network and public IP addresses",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').storageAccountVirtualNetworkPublicIP]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "sqlStorageAccountName": {
            "value": "[parameters('sqlStorageAccountName')]"
          },
          "dcStorageAccountName": {
            "value": "[parameters('dcStorageAccountName')]"
          },
          "spStorageAccountName": {
            "value": "[parameters('spStorageAccountName')]"
          },
          "SqlStorageAccountType": {
            "value": "[parameters('sqlStorageAccountType')]"
          },
          "DcStorageAccountType": {
            "value": "[parameters('dcStorageAccountType')]"
          },
          "primaryDCIPAddressNameWithSuffix": {
            "value": "[variables('primaryDCIPAddressNameWithSuffix')]"
          },
          "spStorageAccountType": {
            "value": "[parameters('spStorageAccountType')]"
          },
          "backupDCIPAddressNameWithSuffix": {
            "value": "[variables('backupDCIPAddressNameWithSuffix')]"
          },
          "sql1AddressNameWithSuffix": {
            "value": "[variables('sql1AddressNameWithSuffix')]"
          },
          "sql0AddressNameWithSuffix": {
            "value": "[variables('sql0AddressNameWithSuffix')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkNameWithSuffix')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "SettingUpSharepointWebPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nested','/','publicip-',parameters('spWebIPNewOrExisting'),'.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('spWebIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "dynamic"
          },
          "dnsPrefix": {
            "value": "[parameters('dnsPrefix')]"
          },
          "publicIpRGName": {
            "value": "[parameters('spWebIPRGName')]"
          }
        }
      }
    },
    {
      "name": "SettingUpSharepointCentralAdminPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nested','/','publicip-new.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[variables('spCAIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "dynamic"
          },
          "dnsPrefix": {
            "value": "[variables('spCADNSPrefix')]"
          },
          "publicIpRGName": {
            "value": "[resourceGroup().name]"
          }
        }
      }
    },
    {
      "name": "LoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "comments": "Create Load Balancers for SQL and DC",
      "dependsOn": [
        "Microsoft.Resources/deployments/StorageAccountVirtualNetworkPublicIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').setupLBsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "spCALBName": {
            "value": "[variables('lbSettings').spCALBName]"
          },
          "spCALBFE": {
            "value": "[variables('lbSettings').spCALBFE]"
          },
          "spCAResourceId": {
            "value": "[variables('ids').spCAResourceId]"
          },
          "spCALBBE": {
            "value": "[variables('lbSettings').spCALBBE]"
          },
          "spCANAT": {
            "value": "[variables('spCANAT')]"
          },
          "spCAlbFEConfigID": {
            "value": "[variables('derivedIds').spCAlbFEConfigID]"
          },
          "spWebLBName": {
            "value": "[variables('lbSettings').spWebLBName]"
          },
          "spWebLBFE": {
            "value": "[variables('lbSettings').spWebLBFE]"
          },
          "spWebResourceId": {
            "value": "[variables(concat('spWebResourceId',parameters('spWebIPNewOrExisting')))]"
          },
          "spWebLBBE": {
            "value": "[variables('lbSettings').spWebLBBE]"
          },
          "spWebLB": {
            "value": "[variables('lbSettings').spWebLB]"
          },
          "spWebLBFEConfigID": {
            "value": "[variables('derivedIds').spWebLBFEConfigID]"
          },
          "spWebBEAddressPoolID": {
            "value": "[variables('derivedIds').spWebBEAddressPoolID]"
          },
          "spWebProbeID": {
            "value": "[variables('derivedIds').spWebProbeID]"
          },
          "spWebProbe": {
            "value": "[variables('spWebProbe')]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').sqlLBName]"
          },
          "sqlLBFE": {
            "value": "[variables('lbSettings').sqlLBFE]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('sqlLBIPAddress')]"
          },
          "staticSubnetRef": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "sqlLBBE": {
            "value": "[variables('lbSettings').sqlLBBE]"
          },
          "sqlLBBEID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "sqllbFEConfigID": {
            "value": "[variables('derivedIds').sqllbFEConfigID]"
          },
          "sqllbProbeID": {
            "value": "[variables('derivedIds').sqllbProbeID]"
          },
          "SQLAOProbe": {
            "value": "[variables('SQLAOProbe')]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/LoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingNicsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "adPDCNICIPAddress": {
            "value": "[parameters('adPDCNICIPAddress')]"
          },
          "staticSubnetRef": {
            "value": "[variables('staticSubnetRef')]"
          },
          "adBEAddressPoolID": {
            "value": "[variables('derivedIds').adBEAddressPoolID]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('derivedIds').adRDPNATRuleID]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          },
          "adBDCNICIPAddress": {
            "value": "[parameters('adBDCNICIPAddress')]"
          },
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "sqlSubnetRef": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "sqlBEAddressPoolID": {
            "value": "[variables('derivedIds').sqlBEAddressPoolID]"
          },
          "sqlwNicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "primaryDCIPAddressNameWithSuffix": {
            "value": "[variables('primaryDCIPAddressNameWithSuffix')]"
          },
          "backupDCIPAddressNameWithSuffix": {
            "value": "[variables('backupDCIPAddressNameWithSuffix')]"
          },
          "sql1AddressNameWithSuffix": {
            "value": "[variables('sql1AddressNameWithSuffix')]"
          },
          "sql0AddressNameWithSuffix": {
            "value": "[variables('sql0AddressNameWithSuffix')]"
          },
          "spwebVMName": {
            "value": "[variables('vmSettings').spwebVMName]"
          },
          "spWebSubnetRef": {
            "value": "[variables('spWebSubnetRef')]"
          },
          "spWebBEAddressPoolID": {
            "value": "[variables('derivedIds').spWebBEAddressPoolID]"
          },
          "spappVMName": {
            "value": "[variables('vmSettings').spappVMName]"
          },
          "spAppSubnetRef": {
            "value": "[variables('spAppSubnetRef')]"
          },
          "spCABEAddressPoolID": {
            "value": "[variables('derivedIds').spCABEAddressPoolID]"
          },
          "spCANATRuleID": {
            "value": "[variables('derivedIds').spCANATRuleID]"
          }
        }
      }
    },
    {
      "name": "ProvisioningVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').provisioningVMs]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.adAvailabilitySetName]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('vmSettings').availabilitySets.sqlAvailabilitySetName]"
          },
        "sqlStorageAccountName": {
            "value": "[parameters('sqlStorageAccountName')]"
          },
          "dcStorageAccountName": {
            "value": "[parameters('dcStorageAccountName')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adVMSize": {
            "value": "[parameters('adVMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "adImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "adImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "adPDCNicName": {
            "value": "[variables('adPDCNicName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adPDCConfigurationFunction": {
            "value": "[variables('configuration').adPDCConfigurationFunction]"
          },
          "adPDCModulesURL": {
            "value": "[variables('configuration').adPDCModulesURL]"
          },
          "adBDCVMName": {
            "value": "[variables('vmSettings').adBDCVMName]"
          },
          "adBDCNicName": {
            "value": "[variables('adBDCNicName')]"
          },
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "fswImagePublisher": {
            "value": "[variables('vmSettings').windowsImagePublisher]"
          },
          "fswImageOffer": {
            "value": "[variables('vmSettings').windowsImageOffer]"
          },
          "fswImageSKU": {
            "value": "[variables('vmSettings').windowsImageSKU]"
          },
          "sqlImagePublisher": {
            "value": "[variables('vmSettings').sqlImagePublisher]"
          },
          "sqlImageOffer": {
            "value": "[variables('vmSettings').sqlImageOffer]"
          },
          "sqlImageSKU": {
            "value": "[variables(parameters('sqlServerVersion'))]"
          },
          "witnessVMSize": {
            "value": "[parameters('witnessVMSize')]"
          },
          "sqlwVMName": {
            "value": "[variables('vmSettings').sqlwVMName]"
          },
          "sqlwNicName": {
            "value": "[variables('sqlwNicName')]"
          }
        }
      }
    },
    {
      "name": "UpdatingDNStoPrimaryADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkNameWithSuffix')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adPDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "ConfiguringBackupADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringBackupADVM]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adBDCVMName": {
            "value": "[variables('vmSettings').adBDCVMName]"
          },
          "adminUserName": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adBDCConfigurationFunction": {
            "value": "[variables('configuration').adBDCConfigurationFunction]"
          },
          "adBDCModulesURL": {
            "value": "[variables('configuration').adBDCModulesURL]"
          }
        }
      }
    },
    {
      "name": "UpdatingDNSwithBackupADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ConfiguringBackupADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkNameWithSuffix')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "UpdatingSQLWNic",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingDNStoPrimaryADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').nicTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "nicName": {
            "value": "[variables('sqlwNicName')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  }
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "UpdatingSQL0Nic",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingSQLWNic"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').nicTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "nicName": {
            "value": "[concat(variables('vmSettings').sqlVMName, '0-nic')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  },
                  "publicIpAddress": {
                    "id": "[resourceId(resourceGroup().Name,'Microsoft.Network/publicIpAddresses', variables('sql0AddressNameWithSuffix'))]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('derivedIds').sqlBEAddressPoolID]"
                    }
                  ]
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "UpdatingSQL1Nic",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingSQL0Nic"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').nicTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "nicName": {
            "value": "[concat(variables('vmSettings').sqlVMName, '1-nic')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": {
                    "id": "[variables('sqlSubnetRef')]"
                  },
                  "publicIpAddress": {
                    "id": "[resourceId(resourceGroup().Name,'Microsoft.Network/publicIpAddresses', variables('sql1AddressNameWithSuffix'))]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('derivedIds').sqlBEAddressPoolID]"
                    }
                  ]
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "PreparingAlwaysOnSqlServer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingSQL0Nic"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').preparingAlwaysOnSqlServer]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlAOPrepareModulesURL": {
            "value": "[variables('configuration').sqlAOPrepareModulesURL]"
          },
          "sqlAOPrepareConfigurationFunction": {
            "value": "[variables('configuration').sqlAOPrepareConfigurationFunction]"
          },
          "sqlAOEPName": {
            "value": "[variables('sqlAOEPName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "sharePath": {
            "value": "[variables('sharePath')]"
          },
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "sqlwVMName": {
            "value": "[variables('vmSettings').sqlwVMName]"
          },
          "fswModulesURL": {
            "value": "[variables('configuration').fswModulesURL]"
          },
          "fswConfigurationFunction": {
            "value": "[variables('configuration').fswConfigurationFunction]"
          },
          "autoPatchingDay": {
            "value": "[parameters('autoPatchingDay')]"
          },
          "autoPatchingStartHour": {
            "value": "[parameters('autoPatchingStartHour')]"
          },
          "autoPatchingEnable": {
            "value": "[variables(parameters('autoPatchingDay'))]"
          },
          "numberOfDisks": {
            "value": "[parameters('numberOfSqlVMDisks')]"
          },
          "workloadType": {
            "value": "[parameters('workloadType')]"
          }
        }
      }
    },
    {
      "name": "ConfiguringAlwaysOn",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/PreparingAlwaysOnSqlServer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').configuringAlwaysOn]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlAOEPName": {
            "value": "[variables('sqlAOEPName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "createClusterModulesURL": {
            "value": "[variables('configuration').createClusterModulesURL]"
          },
          "createClusterConfigurationFunction": {
            "value": "[variables('configuration').createClusterConfigurationFunction]"
          },
          "clusterName": {
            "value": "[variables('clusterName')]"
          },
          "sharePath": {
            "value": "[variables('sharePath')]"
          },
          "sqlAOAGName": {
            "value": "[parameters('sqlAOAGName')]"
          },
          "sqlAOListenerName": {
            "value": "[parameters('sqlAOListenerName')]"
          },
          "sqlAOListenerPort": {
            "value": "[parameters('sqlAOListenerPort')]"
          },
          "sqlLBName": {
            "value": "[variables('lbSettings').sqlLBName]"
          },
          "sqlLBIPAddress": {
            "value": "[parameters('sqlLBIPAddress')]"
          },
          "adPDCVMName": {
            "value": "[variables('vmSettings').adPDCVMName]"
          },
          "sqlwVMName": {
            "value": "[variables('vmSettings').sqlwVMName]"
          },
          "numberOfDisks": {
            "value": "[parameters('numberOfSqlVMDisks')]"
          },
          "workloadType": {
            "value": "[parameters('workloadType')]"
          }
        }
      }
    },
    {
      "name": "CreatingSharepointVirtualMachines",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/StorageAccountVirtualNetworkPublicIP",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/ProvisioningVMs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nested','/','provisioningSharepointVMs.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "spappVMName": {
            "value": "[variables('vmSettings').spappVMName]"
          },
          "spwebVMName": {
            "value": "[variables('vmSettings').spwebVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "spVMSize": {
            "value": "[parameters('spVMSize')]"
          },
          "spWebAvailabilitySet": {
            "value": "[variables('ids').spWebAvailabilitySetName]"
          },
          "spAppAvailabilitySet": {
            "value": "[variables('ids').spAppAvailabilitySetName]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "spImagePublisher": {
            "value": "[variables('vmSettings').spImagePublisher]"
          },
          "spImageOffer": {
            "value": "[variables('vmSettings').spImageOffer]"
          },
          "spImageSKU": {
            "value": "[variables('vmSettings').spImageSKU]"
          },
          "vmContainerName": {
            "value": "[variables('vmSettings').vmContainerName]"
          },
          "spStorageAccountName": {
            "value": "[parameters('sqlStorageAccountName')]"
          },
          "spPreparationModulesURL": {
            "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','PrepareSharePointServerHA.ps1.zip', parameters('_artifactsLocationSasToken'))]"
          },
          "spPreparationFunction": {
            "value": "PrepareSharePointServerHA.ps1\\PrepareSharePointServerHA"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "DNSServer": {
            "value": "[parameters('adPdcNicIPAddress')]"
          }
        }
      }
    },
    {
      "name": "ConfiguringSharepoint",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ConfiguringAlwaysOn",
        "Microsoft.Resources/deployments/CreatingSharepointVirtualMachines"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'),'/','nestedtemplates','/','configuringSharePoint.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "spappVMName": {
            "value": "[variables('vmSettings').spappVMName]"
          },
          "sqlVMName": {
            "value": "[variables('vmSettings').sqlVMName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "spConfigurationModulesURL": {
            "value": "[concat(parameters('_artifactsLocation'),'/','dscv2','/','ConfigureSharePointServerHA.ps1.zip', parameters('_artifactsLocationSasToken'))]"
          },
          "spConfigurationFunction": {
            "value": "ConfigureSharePointServerHA.ps1\\ConfigureSharePointServerHA"
          },

          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sharePointSetupUserAccountUserName": {
            "value": "[parameters('sharePointSetupUserAccountUserName')]"
          },
          "sharePointFarmAccountUserName": {
            "value": "[parameters('sharePointFarmAccountUserName')]"
          },
          "SPServicePoolManagedAccountUserName": {
            "value": "[parameters('SPServicePoolManagedAccountUserName')]"
          },
          "SPWebPoolManagedAccountUserName": {
            "value": "[parameters('SPWebPoolManagedAccountUserName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlAOAGName": {
            "value": "[parameters('sqlAOAGName')]"
          },
          "administrationContentDatabaseName": {
            "value": "[variables('administrationContentDatabaseName')]"
          },
          "configDatabaseName": {
            "value": "[variables('configDatabaseName')]"
          },
          "contentDatabaseName": {
            "value": "[variables('contentDatabaseName')]"
          },
          "sharepointCAfqdn": {
            "value": "[variables('sharepointCAfqdn')]"
          },
          "sharePointSetupUserAccountPassword": {
            "value": "[parameters('sharePointSetupUserAccountPassword')]"
          },
          "sharePointFarmAccountPassword": {
            "value": "[parameters('sharePointFarmAccountPassword')]"
          },
          "sharePointFarmPassphrasePassword": {
            "value": "[parameters('sharePointFarmPassphrasePassword')]"
          },
          "SPServicePoolManagedAccountPassword": {
            "value": "[parameters('SPServicePoolManagedAccountPassword')]"
          },
          "SPWebPoolManagedAccountPassword": {
            "value": "[parameters('SPWebPoolManagedAccountPassword')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "spwebVMName": {
            "value": "[variables('vmSettings').spwebVMName]"
          },
          "sharepointFarmName": {
            "value": "[parameters('sharepointFarmName')]"
          },
          "sharepointWebfqdn": {
            "value": "[variables('sharepointWebfqdn')]"
          },
          "spSiteTemplateName": {
            "value": "[parameters('spSiteTemplateName')]"
          }
        }
      }
    }
  ],
             "outputs": {
              "fqdn": {
                "value": "[variables('sharepointWebfqdn')]",
                "type": "string"
              },
              "cafqdn": {
                "value": "[variables('sharepointCAfqdn')]",
                "type": "string"
              }
            }
          }
